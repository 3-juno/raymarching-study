(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var _WebGL = _interopRequireDefault(require("./modules/WebGL"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

window.onload = function () {
  var webgl = new _WebGL["default"]();
  window.addEventListener('resize', webgl.resize.bind(webgl));
};

},{"./modules/WebGL":3}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _box = _interopRequireDefault(require("./glsl/box.vert"));

var _box2 = _interopRequireDefault(require("./glsl/box.frag"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Box =
/*#__PURE__*/
function () {
  function Box(props) {
    _classCallCheck(this, Box);

    this.props = props;
    this.init();
  }

  _createClass(Box, [{
    key: "init",
    value: function init() {
      var geometry = this.createGeometry();
      var material = this.createMaterial();
      this.mesh = new THREE.Mesh(geometry, material);
      this.props.scene.add(this.mesh); // this.helper = new THREE.FaceNormalsHelper( this.mesh, 0.4, 0x888888, 2 );
      // this.props.scene.add( this.helper );
    }
  }, {
    key: "createGeometry",
    value: function createGeometry() {
      var geometry = new THREE.OctahedronGeometry(1, 0);
      return geometry;
    }
  }, {
    key: "createMaterial",
    value: function createMaterial() {
      var material = new THREE.ShaderMaterial({
        vertexShader: _box["default"],
        fragmentShader: _box2["default"],
        uniforms: {
          uColor: {
            value: new THREE.Color(0xc8a8ff)
          }
        },
        flatShading: true
      });
      return material;
    }
  }, {
    key: "update",
    value: function update() {
      this.mesh.rotation.y += 0.01; // this.helper.update();
    }
  }]);

  return Box;
}();

exports["default"] = Box;

},{"./glsl/box.frag":4,"./glsl/box.vert":5}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _Box = _interopRequireDefault(require("./Box"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var WebGL =
/*#__PURE__*/
function () {
  function WebGL() {
    _classCallCheck(this, WebGL);

    this.init();
  }

  _createClass(WebGL, [{
    key: "init",
    value: function init() {
      this.setProps();
      this.$container = document.getElementById("wrapper");
      this.renderer = new THREE.WebGLRenderer({
        antialias: true,
        alpha: true
      });
      this.renderer.setClearColor(0xfcfcfc);
      this.renderer.setSize(window.innerWidth, window.innerHeight);
      this.$container.appendChild(this.renderer.domElement);
      this.pixelRatio = window.devicePixelRatio;
      this.renderer.setPixelRatio(this.pixelRatio);
      this.scene = new THREE.Scene();
      this.camera = new THREE.PerspectiveCamera(this.props.fov, this.props.aspect, this.props.near, this.props.far);
      this.camera.position.set(0, 1, 3);
      this.camera.lookAt(this.scene.position);
      console.log(this.camera);
      this.obj = new _Box["default"]({
        scene: this.scene
      });
      this.render();
    }
  }, {
    key: "setProps",
    value: function setProps() {
      var width = window.innerWidth;
      var height = window.innerHeight;
      var aspect = width / height;
      this.props = {
        fov: 45,
        width: width,
        height: height,
        aspect: aspect,
        left: -width / 2,
        right: width / 2,
        top: height / 2,
        bottom: -height / 2,
        near: 0.1,
        far: 10000
      };
    }
  }, {
    key: "render",
    value: function render() {
      this.obj.update();
      this.renderer.render(this.scene, this.camera);
      requestAnimationFrame(this.render.bind(this));
    }
  }, {
    key: "resize",
    value: function resize() {
      this.setProps();
      this.renderer.setSize(this.props.width, this.props.height);
      this.camera.aspect = this.props.aspect;
      this.camera.updateProjectionMatrix();
    }
  }]);

  return WebGL;
}();

exports["default"] = WebGL;

},{"./Box":2}],4:[function(require,module,exports){
module.exports = "uniform vec3 uColor;\r\nvarying vec3 vPos;\r\nvoid main(){\r\n  // make a normal for flat shading!\r\n  vec3 dx = dFdx(vPos);\r\n  vec3 dy = dFdy(vPos);\r\n  vec3 normal = normalize(cross(dx, dy));\r\n  vec3 color = uColor + vPos * 0.2 + normal * 0.1;\r\n  gl_FragColor = vec4(color, 1.0);\r\n}";

},{}],5:[function(require,module,exports){
module.exports = "varying vec3 vPos;\r\nvoid main(){\r\n  vec4 worldPosition = modelMatrix * vec4(position, 1.0);\r\n  vPos = worldPosition.xyz;\r\n  gl_Position = projectionMatrix * viewMatrix * worldPosition;   \r\n}";

},{}]},{},[1]);
